{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      fno: 0,\n      food_detail: {}\n    };\n  },\n  created() {\n    this.fno = this.$route.params.fno;\n  },\n  mounted() {\n    /*\r\n      created = mounted = updated = destroyed => CallBack (자동 생성성)\r\n        |         |         |         |\r\n                                    화면이 변경된 경우\r\n                          데이터가 수정이된 경우\r\n                브라우저에 HTML이 구현된 상태\r\n      Vue 생성\r\n        라우터에서 화면 이동시 데이터를 전송\r\n      router\r\n      => path:'/food/detail/:fno' getParameter(\"fno\")\r\n      => link\r\n      <router-link :to=\"{name:'FoodDetailView',params:{fno:f.fno,...}}\">\r\n      </router-link>  \r\n        => Vue vs React\r\n      => 가상돔\r\n      => Vue의 특징\r\n      => MVVM 구조\r\n    */\n    axios.get('http://127.0.0.1:8000/web/food/detail_vue/', {\n      params: {\n        fno: this.fno\n      }\n    }).then(res => {\n      console.log(res.data);\n      this.food_detail = res.data;\n    }).catch(err => {\n      console.log(err.response);\n    });\n  },\n  methods: {\n    go() {\n      location.href = \"/food\";\n    }\n  }\n};","map":{"version":3,"names":["axios","data","fno","food_detail","created","$route","params","mounted","get","then","res","console","log","catch","err","response","methods","go","location","href"],"sources":["C:\\vuejs\\vue_lastproject\\src\\views\\FoodDetailView.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper row3\">\r\n    <main class=\"container clear\">    \r\n      <h2 class=\"sectiontitle\">맛집 상세보기</h2>\r\n      <table class=\"table\">\r\n        <tr>\r\n          <td width=\"30%\" class=\"text-center\" rowspan=\"9\">\r\n            <img :src=\"'https://www.menupan.com'+food_detail.poster\" style=\"width: 300px;height: 350px;\">\r\n          </td>\r\n          <td colspan=\"2\">\r\n            <h3>{{ food_detail.name }}&nbsp;<span style=\"color: orange;\">{{ food_detail.score }}</span></h3>\r\n          </td>\r\n        </tr>  \r\n        <tr>\r\n          <th style=\"color: gray;\" width=\"20%\">전화</th>\r\n          <td width=\"50%\"></td>\r\n        </tr>\r\n        <tr>\r\n          <th style=\"color: gray;\" width=\"20%\">주소</th>\r\n          <td width=\"50%\">{{ food_detail.address }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th style=\"color: gray;\" width=\"20%\">음식종류</th>\r\n          <td width=\"50%\">{{ food_detail.type }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th style=\"color: gray;\" width=\"20%\">주차</th>\r\n          <td width=\"50%\">{{ food_detail.parking }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th style=\"color: gray;\" width=\"20%\">영업시간</th>\r\n          <td width=\"50%\">{{ food_detail.time }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th style=\"color: gray;\" width=\"20%\">가격대</th>\r\n          <td width=\"50%\">{{ food_detail.price }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th style=\"color: gray;\" width=\"20%\">전화</th>\r\n          <td width=\"50%\">{{ food_detail.phone }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th style=\"color: gray;\" width=\"20%\">테마</th>\r\n          <td width=\"50%\">{{ food_detail.theme }}</td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan=\"3\" class=\"text-right inline\">\r\n            <button class=\"btn-sm btn-success\">교통상황</button>\r\n            <button class=\"btn-sm btn-warning\">맛집통계</button>\r\n            <button class=\"btn-sm btn-info\" @click=\"go()\">목록</button>\r\n          </td>\r\n        </tr>\r\n      </table>  \r\n    </main>\r\n  </div>    \r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default{\r\n  data(){\r\n    return {\r\n      fno:0,\r\n      food_detail:{}\r\n    }\r\n  },\r\n  created(){\r\n    this.fno=this.$route.params.fno\r\n  },\r\n  mounted(){\r\n    /*\r\n      created = mounted = updated = destroyed => CallBack (자동 생성성)\r\n        |         |         |         |\r\n                                    화면이 변경된 경우\r\n                          데이터가 수정이된 경우\r\n                브라우저에 HTML이 구현된 상태\r\n      Vue 생성\r\n\r\n      라우터에서 화면 이동시 데이터를 전송\r\n      router\r\n      => path:'/food/detail/:fno' getParameter(\"fno\")\r\n      => link\r\n      <router-link :to=\"{name:'FoodDetailView',params:{fno:f.fno,...}}\">\r\n      </router-link>  \r\n\r\n      => Vue vs React\r\n      => 가상돔\r\n      => Vue의 특징\r\n      => MVVM 구조\r\n    */\r\n    axios.get('http://127.0.0.1:8000/web/food/detail_vue/',{\r\n      params:{\r\n        fno:this.fno\r\n      }\r\n    }).then(res=>{\r\n      console.log(res.data)\r\n      this.food_detail=res.data\r\n    }).catch(err=>{\r\n      console.log(err.response)\r\n    })\r\n  },\r\n  methods:{\r\n    go(){\r\n      location.href=\"/food\"\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"AAyDA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAc;EACZC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,GAAG,EAAC,CAAC;MACLC,WAAW,EAAC,CAAC;IACf;EACF,CAAC;EACDC,OAAOA,CAAA,EAAE;IACP,IAAI,CAACF,GAAG,GAAC,IAAI,CAACG,MAAM,CAACC,MAAM,CAACJ,GAAE;EAChC,CAAC;EACDK,OAAOA,CAAA,EAAE;IACP;;;;;;;;;;;;;;;;;;IAoBAP,KAAK,CAACQ,GAAG,CAAC,4CAA4C,EAAC;MACrDF,MAAM,EAAC;QACLJ,GAAG,EAAC,IAAI,CAACA;MACX;IACF,CAAC,CAAC,CAACO,IAAI,CAACC,GAAG,IAAE;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACT,IAAI;MACpB,IAAI,CAACE,WAAW,GAACO,GAAG,CAACT,IAAG;IAC1B,CAAC,CAAC,CAACY,KAAK,CAACC,GAAG,IAAE;MACZH,OAAO,CAACC,GAAG,CAACE,GAAG,CAACC,QAAQ;IAC1B,CAAC;EACH,CAAC;EACDC,OAAO,EAAC;IACNC,EAAEA,CAAA,EAAE;MACFC,QAAQ,CAACC,IAAI,GAAC,OAAM;IACtB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}