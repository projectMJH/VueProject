{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, \"Count:\" + _toDisplayString(_ctx.count), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.increment && _ctx.increment(...args))\n  }, \"Increment\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.decrement && _ctx.decrement(...args))\n  }, \"Decrement\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","_ctx","count","onClick","_cache","args","increment","decrement"],"sources":["C:\\vuejs\\vuex_exam_project\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <p>Count:{{ count }}</p>\n    <button @click=\"increment\">Increment</button>\n    <button @click=\"decrement\">Decrement</button>\n  </div>\n</template>\n\n<script>\nimport {mapState,mapActions} from 'vuex';\n\nexport default {\n  computed:{\n    ...mapState(['count'])\n  },\n  methods:{\n    ...mapActions(['increment','decrement'])\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAIM,cAHJC,mBAAA,CAAwB,WAArB,QAAM,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,KAAK,kBACjBH,mBAAA,CAA6C;IAApCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,IAAA,CAAAK,SAAA,IAAAL,IAAA,CAAAK,SAAA,IAAAD,IAAA,CAAS;KAAE,WAAS,GACpCN,mBAAA,CAA6C;IAApCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,IAAA,CAAAM,SAAA,IAAAN,IAAA,CAAAM,SAAA,IAAAF,IAAA,CAAS;KAAE,WAAS,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}